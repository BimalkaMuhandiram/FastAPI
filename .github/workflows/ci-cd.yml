name: CI/CD Pipeline for FastAPI

# Trigger the workflow when code is pushed to main or pull request is made.
on:
  push:
    branches:
      - main  # Trigger only on changes to the main branch
  pull_request:
    branches:
      - main  # Trigger when pull requests target the main branch

jobs:
  # The job for building, testing, and deploying the app
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Python for testing
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Run tests (unit tests using pytest)
      - name: Run tests
        run: |
          pytest

  # The deployment job (will run after build)
  deploy:
    runs-on: ubuntu-latest
    needs: build  # This ensures deploy only happens after the build job completes successfully

    steps:
      # Step 1: Authenticate with Google Cloud
      - name: Set up Google Cloud credentials
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS_JSON }}  # Use stored secret for authentication

      # Step 2: Set up Docker
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # Step 3: Build Docker image and push to Google Container Registry
      - name: Build and push Docker image
        run: |
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/fastapi-car-recommender .
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/fastapi-car-recommender

      # Step 4: Deploy to Google Cloud Run
      - name: Deploy to Google Cloud Run
        run: |
          gcloud run deploy fastapi-car-recommender \
            --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/fastapi-car-recommender \
            --platform managed \
            --region us-central1 \
            --allow-unauthenticated
